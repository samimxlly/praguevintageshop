name: Scrape and commit

on:
  schedule:
    - cron: '*/3 * * * *' # every 3 minutes
  workflow_dispatch: {}
  push:
    branches: [ main ]

permissions:
  contents: write

jobs:
  scrape:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Set up git for pushing
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install deps
        run: npm ci

      - name: Run scraper
        env:
          SKIP_IMAGE_DOWNLOAD: '1'
        run: node scraper.js

      - name: Debug: show working directory and diff
        run: |
          echo "==== Current working directory ===="
          pwd
          echo "==== products.json git diff ===="
          git diff products.json || true
          echo "==== products.json head ===="
          head -40 products.json || true

      - name: "Debug: show products.json and git status"
        run: |
          echo "==== Repo info ===="
          git rev-parse --abbrev-ref HEAD || true
          echo "HEAD:" $(git rev-parse HEAD)
          echo "==== Files ===="
          ls -la || true
          echo "==== products.json check ===="
          if [ -f products.json ]; then
            echo "products.json exists"
            if command -v sha256sum >/dev/null 2>&1; then
              sha256sum products.json || true
            else
              shasum -a 256 products.json || true
            fi
            echo "---- head of products.json ----"
            sed -n '1,120p' products.json || true
          else
            echo "products.json NOT FOUND"
          fi
          echo "==== git status (before add) ===="
          git status --porcelain || true
          echo "==== git ls-files --modified ===="
          git ls-files --modified || true

      - name: Commit products.json if changed
        run: |
          git add products.json public/images || true
          if ! git diff --quiet --staged; then
            echo "Staged changes:" && git diff --staged --name-only || true
            git commit -m "chore: update products.json (scraped)"
            echo "Pushing to origin..."
            git push origin HEAD:main || true
            echo "Push exit:$?"
          else
            echo "No changes to commit"
          fi

      - name: Force commit (for Netlify test)
        run: |
          git commit --allow-empty -m "force: trigger Netlify redeploy"
          git push origin HEAD:main

      - name: "Debug: git log last 5 commits"
        run: |
          echo "==== last commits ===="
          git --no-pager log -n 5 --oneline || true
